scalar Date

scalar DateTime

scalar ObjectID

scalar Long

type User @key(fields: "id") {
  id: ObjectID!
  email: String!
  phone: String!
  firstName: String!
  lastName: String!
  preferredName: String
  province: Province!
  dateOfBirth: Date!
  status: UserStatus!
}

enum Province {
  AB
  BC
  MB
  NB
  NL
  NT
  NS
  NU
  ON
  PE
  QC
  SK
  YT
}

enum UserStatus {
  ACTIVE
  INACTIVE
  FROZEN
  PENDING
}

input UpdateUserDetailsInput {
  userId: ObjectID!
  firstName: String
  lastName: String
  preferredName: String
  province: Province
}

input UpdateUserContactInput {
  userId: ObjectID!
  phone: String
  email: String
}

type UpdateUserDetailsResponse {
  user: User!
}

type UpdateUserContactResponse {
  user: User!
}

extend type Mutation {
  updateUserDetails(input: UpdateUserDetailsInput!): UpdateUserDetailsResponse!
  updateUserContact(input: UpdateUserContactInput!): UpdateUserContactResponse!
}

extend type Query {
  user(id: ObjectID!): User!
}

enum UserRelativeQueryValueType {
  STRING
  NUMBER
  DATE
  OBJECT_ID
  BOOLEAN
  NULL
}

enum UserRelativeQuerySortDirection {
  ASC
  DESC
}

enum UserRelativeQueryFilterOperator {
  EQ
  NE
  LT
  LTE
  IN
  NIN
  GT
  GTE
}

input UserRelativeQueryFilterInput {
  field: String!
  type: UserRelativeQueryValueType!
  value: String
  values: [String!]
  operator: UserRelativeQueryFilterOperator!
}

input UserRelativeQuerySortInput {
  field: String!
  direction: UserRelativeQuerySortDirection!
}

input UserRelativeQueryCursorInput {
  field: String!
  type: UserRelativeQueryValueType!
  sort: UserRelativeQuerySortDirection!
  cursor: String
}

input UserRelativeQueryInput {
  filter: [UserRelativeQueryFilterInput!]
  primaryCursor: UserRelativeQueryCursorInput!
  secondaryCursor: UserRelativeQueryCursorInput
  limit: Int
}

type UserRelativeQueryCursor {
  field: String!
  type: UserRelativeQueryValueType!
  sort: UserRelativeQuerySortDirection!
  cursor: String
}

type UserList {
  results: [User!]!
  hasNextPage: Boolean!
  primaryCursor: UserRelativeQueryCursor
  secondaryCursor: UserRelativeQueryCursor
}

extend type Query {
  users(input: UserRelativeQueryInput!): UserList!
}

